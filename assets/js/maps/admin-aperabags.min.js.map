{"version":3,"sources":["admin-edit.js"],"names":[],"mappingsfile":"../admin-aperabags.min.js","sourcesContent":["( function( $ ) {\n    var frame,\n        metaBox,\n        addImgLink,\n        replaceImgLink,\n        delImgLink,\n        imgContainer,\n        imgIdInput;\n\n    if ( 'undefined' !== typeof inlineEditPost && null !== inlineEditPost ) {\n        $( document ).on( 'DOMContentLoaded reloaded', function( e ) {\n            e.stopImmediatePropagation();\n            \n            $( '.column-featured > a' ).remove( 'click', save_option );\n            $( '.column-featured > a' ).on( 'click', save_option );\n            $( '[data-toggle=\"tooltip\"]' ).tooltip({\n                container: 'body'\n            });\n        });\n        \n        var $wp_inline_edit = inlineEditPost.edit;\n\n        inlineEditPost.edit = function( id ) {\n            \n            // \"call\" the original WP edit function.\n            // we don't want to leave WordPress hanging.\n            $wp_inline_edit.apply( this, arguments );\n            \n            // now we take care of our business.\n\n            // get the post ID.\n            var $post_id = 0;\n            if ( typeof( id ) == 'object' ) {\n                $post_id = parseInt( this.getId( id ) );\n            }\n            \n            if ( $post_id > 0 ) {\n                // define the edit row.\n                var $edit_row = $( '#edit-' + $post_id );\n                var $post_row = $( '#post-' + $post_id );\n\n                // get the data.\n                var $featured = $( '.column-featured>a[data]', $post_row ).attr('data');\n                \n                // populate the data.\n                if ( 'false' === $featured && $( 'input[name=\"testimonial_featured\"]:checked', $edit_row )[0] ) {\n                    $( 'input[name=\"testimonial_featured\"]', $edit_row )[0].removeAttribute( 'checked' );\n                } else {\n                    if ( 'checked' === $featured ) {\n                        $( 'input[name=\"testimonial_featured\"]', $edit_row )[0].setAttribute( 'checked', $featured );\n                    }\n                }\n            }\n        };\n    }\n        \n    function save_option( e ) {\n        e.stopImmediatePropagation();\n        var $post_id = $( this ).attr( 'post-id' );\n        var $post_row = $( '#post-' + $post_id );\n        \n        inlineEditPost.edit( this );\n        // get the data.\n        var $edit_row = $( '#edit-' + $post_id );\n        var $featured = $( '.column-featured>a[data]', $post_row ).attr('data');\n        $edit_row.find( '> td' ).addClass( 'processing' );\n        $( '<div class=\"d-flex justify-content-center custom-spinner\"><div class=\"spinner-border\" role=\"status\"><span class=\"sr-only\">Loading...</span></div></div>' ).prependTo( $edit_row.find( '> td.processing' ) );\n        // populate the data.\n        if ( 'false' === $featured && ! $( 'input[name=\"testimonial_featured\"]:checked', $edit_row )[0] ) {\n            $( 'input[name=\"testimonial_featured\"]', $edit_row )[0].setAttribute( 'checked', 'checked' );\n            inlineEditPost.save( $edit_row );\n        } else {\n            if ( 'checked' === $featured ) {\n                $( 'input[name=\"testimonial_featured\"]', $edit_row )[0].removeAttribute( 'checked' );\n                inlineEditPost.save( $edit_row );\n            }\n        }\n\n        setTimeout( function() {\n            $( document ).trigger( 'reloaded' );\n        },1000 );\n    }\n\n    if ( true ) {\n        $( document ).on( 'DOMContentLoaded', function( e ) {\n            // Set all variables to be used in scope.\n            metaBox = $( '#featured-product-image.postbox' ); // Your meta box id here.\n            addImgLink = metaBox.find('.editor-product-featured-image__toggle');\n            replaceImgLink = metaBox.find('.components-button.is-secondary');\n            delImgLink = metaBox.find( '.components-button.is-link.is-destructive');\n            imgContainer = metaBox.find( '.editor-product-featured-image__container');\n            imgIdInput = metaBox.find( '.featured-product-img-id' );\n            featured_product_img_js();\n        });\n    }\n\n    function featured_product_img_js() {\n          // ADD IMAGE LINK.\n          addImgLink.on( 'click', media_selection );\n\n          // Replace IMAGE LINK.\n          replaceImgLink.on( 'click', media_selection );\n          \n          \n          // DELETE IMAGE LINK.\n          delImgLink.on( 'click', function( event ){\n\n            event.preventDefault();\n\n            // Clear out the preview image.\n            imgContainer.find( 'img' ).remove();\n\n            // Un-hide the add image link.\n            addImgLink.removeClass( 'd-none' );\n\n            // Hide the replace image button.\n            replaceImgLink.addClass( 'd-none' );\n\n            // Hide the delete image link.\n            delImgLink.addClass( 'd-none' );\n\n            // Delete the image id from the hidden input.\n            imgIdInput.val( '' );\n\n          });\n      }\n\n      function media_selection( event ) {\n                  \n          event.preventDefault();\n          \n          // If the media frame already exists, reopen it.\n          if ( frame ) {\n            frame.open();\n            return;\n          }\n          \n          // Create a new media frame.\n          frame = wp.media({\n            title: 'Select or Upload Media to display as featured product on front page.',\n            button: {\n              text: 'Use this media'\n            },\n            multiple: false  // Set to true to allow multiple files to be selected.\n          });\n\n          \n          // When an image is selected in the media frame...\n          frame.on( 'select', function() {\n\n            if ( imgContainer.find( 'img' ).length ) {\n                imgContainer.find( 'img' ).remove();\n            }\n            \n            // Get media attachment details from the frame state.\n            var attachment = frame.state().get('selection').first().toJSON();\n\n            // Send the attachment URL to our custom image input field.\n            imgContainer.append( '<img src=\"'+attachment.url+'\" alt=\"' + attachment.title + '\" style=\"max-width:100%;\"/>' );\n\n            // Send the attachment id to our hidden input.\n            imgIdInput.val( attachment.id );\n\n            // Hide the add image link.\n            addImgLink.addClass( 'd-none' );\n\n            // Unhide the replace image button.\n            replaceImgLink.removeClass( 'd-none' );\n\n            // Unhide the remove image link.\n            delImgLink.removeClass( 'd-none' );\n          });\n\n          // Finally, open the modal on click.\n          frame.open();\n        }\n    \n})( jQuery );\n"]}